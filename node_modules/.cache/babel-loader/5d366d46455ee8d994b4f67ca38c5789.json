{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nvar proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\nexport function getDefaultProxySettings(_proxyUrl) {\n  return undefined;\n}\nexport function proxyPolicy(_proxySettings) {\n  return {\n    create: function (_nextPolicy, _options) {\n      throw proxyNotSupportedInBrowser;\n    }\n  };\n}\nvar ProxyPolicy = /** @class */function (_super) {\n  __extends(ProxyPolicy, _super);\n  function ProxyPolicy(nextPolicy, options) {\n    var _this = _super.call(this, nextPolicy, options) || this;\n    throw proxyNotSupportedInBrowser;\n    return _this;\n  }\n  ProxyPolicy.prototype.sendRequest = function (_request) {\n    throw proxyNotSupportedInBrowser;\n  };\n  return ProxyPolicy;\n}(BaseRequestPolicy);\nexport { ProxyPolicy };","map":{"version":3,"names":["BaseRequestPolicy","proxyNotSupportedInBrowser","Error","getDefaultProxySettings","_proxyUrl","undefined","proxyPolicy","_proxySettings","create","_nextPolicy","_options","ProxyPolicy","_super","__extends","nextPolicy","options","_this","call","prototype","sendRequest","_request"],"sources":["../../../lib/policies/proxyPolicy.browser.ts"],"sourcesContent":[null],"mappings":"AAAA;AACA;;AAGA,SACEA,iBAAiB,QAIZ,iBAAiB;AAIxB,IAAMC,0BAA0B,GAAG,IAAIC,KAAK,CAAC,qDAAqD,CAAC;AAEnG,OAAM,SAAUC,uBAAuBA,CAACC,SAAkB;EACxD,OAAOC,SAAS;AAClB;AAEA,OAAM,SAAUC,WAAWA,CAACC,cAA8B;EACxD,OAAO;IACLC,MAAM,EAAE,SAAAA,CAACC,WAA0B,EAAEC,QAAkC;MACrE,MAAMT,0BAA0B;IAClC;GACD;AACH;AAEA,IAAAU,WAAA,0BAAAC,MAAA;EAAiCC,SAAA,CAAAF,WAAA,EAAAC,MAAA;EAC/B,SAAAD,YAAYG,UAAyB,EAAEC,OAAiC;IAAxE,IAAAC,KAAA,GACEJ,MAAA,CAAAK,IAAA,OAAMH,UAAU,EAAEC,OAAO,CAAC;IAC1B,MAAMd,0BAA0B;;EAClC;EAEOU,WAAA,CAAAO,SAAA,CAAAC,WAAW,GAAlB,UAAmBC,QAAyB;IAC1C,MAAMnB,0BAA0B;EAClC,CAAC;EACH,OAAAU,WAAC;AAAD,CAAC,CATgCX,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}