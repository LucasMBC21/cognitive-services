{"ast":null,"code":"// ./src/azure-cognitiveservices-computervision.js\n\n// Azure SDK client libraries\nimport { ComputerVisionClient } from '@azure/cognitiveservices-computervision';\nimport { ApiKeyCredentials } from '@azure/ms-rest-js';\n\n// Authentication requirements\nconst key = process.env.REACT_APP_AZURE_COMPUTER_VISION_KEY;\nconst endpoint = process.env.REACT_APP_AZURE_COMPUTER_VISION_ENDPOINT;\n\n// Verificação de configuração\nexport const isConfigured = () => {\n  const result = key && endpoint && key.length > 0 && endpoint.length > 0;\n  console.log(`ComputerVision isConfigured = ${result}`);\n  return result;\n};\n\n// Analisar Imagem a partir da URL\nexport const computerVision = async url => {\n  // Autenticar com o serviço da Azure\n  const computerVisionClient = new ComputerVisionClient(new ApiKeyCredentials({\n    inHeader: {\n      'Ocp-Apim-Subscription-Key': key\n    }\n  }), endpoint);\n  try {\n    // Analisar a imagem para obter a descrição\n    const analysis = await computerVisionClient.analyzeImage(url, {\n      visualFeatures: [\"Description\"]\n    });\n\n    // Retornar apenas a descrição encontrada\n    if (analysis.description && analysis.description.captions.length > 0) {\n      return {\n        description: analysis.description.captions[0].text\n      };\n    } else {\n      return {\n        description: 'Nenhuma descrição encontrada para a imagem.'\n      };\n    }\n  } catch (error) {\n    console.error('Erro ao analisar a imagem:', error);\n    throw new Error('Erro ao analisar a imagem.');\n  }\n};","map":{"version":3,"names":["ComputerVisionClient","ApiKeyCredentials","key","process","env","REACT_APP_AZURE_COMPUTER_VISION_KEY","endpoint","REACT_APP_AZURE_COMPUTER_VISION_ENDPOINT","isConfigured","result","length","console","log","computerVision","url","computerVisionClient","inHeader","analysis","analyzeImage","visualFeatures","description","captions","text","error","Error"],"sources":["C:/Users/lucas/Desktop/NAC3/react-app-cognitive-services/src/azure-cognitiveservices-computervision.js"],"sourcesContent":["// ./src/azure-cognitiveservices-computervision.js\r\n\r\n// Azure SDK client libraries\r\nimport { ComputerVisionClient } from '@azure/cognitiveservices-computervision';\r\nimport { ApiKeyCredentials } from '@azure/ms-rest-js';\r\n\r\n// Authentication requirements\r\nconst key = process.env.REACT_APP_AZURE_COMPUTER_VISION_KEY;\r\nconst endpoint = process.env.REACT_APP_AZURE_COMPUTER_VISION_ENDPOINT;\r\n\r\n// Verificação de configuração\r\nexport const isConfigured = () => {\r\n    const result = (key && endpoint && key.length > 0 && endpoint.length > 0);\r\n    console.log(`ComputerVision isConfigured = ${result}`);\r\n    return result;\r\n}\r\n\r\n// Analisar Imagem a partir da URL\r\nexport const computerVision = async (url) => {\r\n    // Autenticar com o serviço da Azure\r\n    const computerVisionClient = new ComputerVisionClient(\r\n        new ApiKeyCredentials({ inHeader: { 'Ocp-Apim-Subscription-Key': key } }), \r\n        endpoint\r\n    );\r\n\r\n    try {\r\n        // Analisar a imagem para obter a descrição\r\n        const analysis = await computerVisionClient.analyzeImage(url, { visualFeatures: [\"Description\"] });\r\n\r\n        // Retornar apenas a descrição encontrada\r\n        if (analysis.description && analysis.description.captions.length > 0) {\r\n            return { description: analysis.description.captions[0].text };\r\n        } else {\r\n            return { description: 'Nenhuma descrição encontrada para a imagem.' };\r\n        }\r\n    } catch (error) {\r\n        console.error('Erro ao analisar a imagem:', error);\r\n        throw new Error('Erro ao analisar a imagem.');\r\n    }\r\n}\r\n"],"mappings":"AAAA;;AAEA;AACA,SAASA,oBAAoB,QAAQ,yCAAyC;AAC9E,SAASC,iBAAiB,QAAQ,mBAAmB;;AAErD;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,mCAAmC;AAC3D,MAAMC,QAAQ,GAAGH,OAAO,CAACC,GAAG,CAACG,wCAAwC;;AAErE;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAC9B,MAAMC,MAAM,GAAIP,GAAG,IAAII,QAAQ,IAAIJ,GAAG,CAACQ,MAAM,GAAG,CAAC,IAAIJ,QAAQ,CAACI,MAAM,GAAG,CAAE;EACzEC,OAAO,CAACC,GAAG,CAAC,iCAAiCH,MAAM,EAAE,CAAC;EACtD,OAAOA,MAAM;AACjB,CAAC;;AAED;AACA,OAAO,MAAMI,cAAc,GAAG,MAAOC,GAAG,IAAK;EACzC;EACA,MAAMC,oBAAoB,GAAG,IAAIf,oBAAoB,CACjD,IAAIC,iBAAiB,CAAC;IAAEe,QAAQ,EAAE;MAAE,2BAA2B,EAAEd;IAAI;EAAE,CAAC,CAAC,EACzEI,QACJ,CAAC;EAED,IAAI;IACA;IACA,MAAMW,QAAQ,GAAG,MAAMF,oBAAoB,CAACG,YAAY,CAACJ,GAAG,EAAE;MAAEK,cAAc,EAAE,CAAC,aAAa;IAAE,CAAC,CAAC;;IAElG;IACA,IAAIF,QAAQ,CAACG,WAAW,IAAIH,QAAQ,CAACG,WAAW,CAACC,QAAQ,CAACX,MAAM,GAAG,CAAC,EAAE;MAClE,OAAO;QAAEU,WAAW,EAAEH,QAAQ,CAACG,WAAW,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC;MAAK,CAAC;IACjE,CAAC,MAAM;MACH,OAAO;QAAEF,WAAW,EAAE;MAA8C,CAAC;IACzE;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZZ,OAAO,CAACY,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EACjD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}