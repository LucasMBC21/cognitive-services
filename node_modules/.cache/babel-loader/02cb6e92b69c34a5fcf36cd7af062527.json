{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __assign, __spreadArrays } from \"tslib\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { DefaultHttpClient } from \"./defaultHttpClient\";\nimport { getPathStringFromParameter, getPathStringFromParameterPath } from \"./operationParameter\";\nimport { isStreamOperation } from \"./operationSpec\";\nimport { deserializationPolicy } from \"./policies/deserializationPolicy\";\nimport { exponentialRetryPolicy } from \"./policies/exponentialRetryPolicy\";\nimport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nimport { userAgentPolicy, getDefaultUserAgentHeaderName, getDefaultUserAgentValue } from \"./policies/userAgentPolicy\";\nimport { DefaultRedirectOptions, redirectPolicy } from \"./policies/redirectPolicy\";\nimport { RequestPolicyOptions } from \"./policies/requestPolicy\";\nimport { rpRegistrationPolicy } from \"./policies/rpRegistrationPolicy\";\nimport { signingPolicy } from \"./policies/signingPolicy\";\nimport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nimport { MapperType } from \"./serializer\";\nimport { URLBuilder } from \"./url\";\nimport * as utils from \"./util/utils\";\nimport { stringifyXML } from \"./util/xml\";\nimport { isWebResourceLike, WebResource } from \"./webResource\";\nimport { agentPolicy } from \"./policies/agentPolicy\";\nimport { proxyPolicy, getDefaultProxySettings } from \"./policies/proxyPolicy\";\nimport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nimport { AzureIdentityCredentialAdapter, azureResourceManagerEndpoints } from \"./credentials/azureIdentityTokenCredentialAdapter\";\n/**\n * @class\n * Initializes a new instance of the ServiceClient.\n */\nvar ServiceClient = /** @class */function () {\n  /**\n   * The ServiceClient constructor\n   * @constructor\n   * @param {ServiceClientCredentials} [credentials] The credentials object used for authentication.\n   * @param {ServiceClientOptions} [options] The service client options that govern the behavior of the client.\n   */\n  function ServiceClient(credentials, options) {\n    if (!options) {\n      options = {};\n    }\n    if (options.baseUri) {\n      this.baseUri = options.baseUri;\n    }\n    var serviceClientCredentials;\n    if (isTokenCredential(credentials)) {\n      var scope = undefined;\n      if ((options === null || options === void 0 ? void 0 : options.baseUri) && azureResourceManagerEndpoints.includes(options === null || options === void 0 ? void 0 : options.baseUri)) {\n        scope = options.baseUri + \"/.default\";\n      }\n      serviceClientCredentials = new AzureIdentityCredentialAdapter(credentials, scope);\n    } else {\n      serviceClientCredentials = credentials;\n    }\n    if (serviceClientCredentials && !serviceClientCredentials.signRequest) {\n      throw new Error(\"credentials argument needs to implement signRequest method\");\n    }\n    this._withCredentials = options.withCredentials || false;\n    this._httpClient = options.httpClient || new DefaultHttpClient();\n    this._requestPolicyOptions = new RequestPolicyOptions(options.httpPipelineLogger);\n    var requestPolicyFactories;\n    if (Array.isArray(options.requestPolicyFactories)) {\n      requestPolicyFactories = options.requestPolicyFactories;\n    } else {\n      requestPolicyFactories = createDefaultRequestPolicyFactories(serviceClientCredentials, options);\n      if (options.requestPolicyFactories) {\n        var newRequestPolicyFactories = options.requestPolicyFactories(requestPolicyFactories);\n        if (newRequestPolicyFactories) {\n          requestPolicyFactories = newRequestPolicyFactories;\n        }\n      }\n    }\n    this._requestPolicyFactories = requestPolicyFactories;\n  }\n  /**\n   * Send the provided httpRequest.\n   */\n  ServiceClient.prototype.sendRequest = function (options) {\n    if (options === null || options === undefined || typeof options !== \"object\") {\n      throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n    }\n    var httpRequest;\n    try {\n      if (isWebResourceLike(options)) {\n        options.validateRequestProperties();\n        httpRequest = options;\n      } else {\n        httpRequest = new WebResource();\n        httpRequest = httpRequest.prepare(options);\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    var httpPipeline = this._httpClient;\n    if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n      for (var i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n        httpPipeline = this._requestPolicyFactories[i].create(httpPipeline, this._requestPolicyOptions);\n      }\n    }\n    return httpPipeline.sendRequest(httpRequest);\n  };\n  /**\n   * Send an HTTP request that is populated using the provided OperationSpec.\n   * @param {OperationArguments} operationArguments The arguments that the HTTP request's templated values will be populated from.\n   * @param {OperationSpec} operationSpec The OperationSpec to use to populate the httpRequest.\n   * @param {ServiceCallback} callback The callback to call when the response is received.\n   */\n  ServiceClient.prototype.sendOperationRequest = function (operationArguments, operationSpec, callback) {\n    if (typeof operationArguments.options === \"function\") {\n      callback = operationArguments.options;\n      operationArguments.options = undefined;\n    }\n    var httpRequest = new WebResource();\n    var result;\n    try {\n      var baseUri = operationSpec.baseUrl || this.baseUri;\n      if (!baseUri) {\n        throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\");\n      }\n      httpRequest.method = operationSpec.httpMethod;\n      httpRequest.operationSpec = operationSpec;\n      var requestUrl = URLBuilder.parse(baseUri);\n      if (operationSpec.path) {\n        requestUrl.appendPath(operationSpec.path);\n      }\n      if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n        for (var _i = 0, _a = operationSpec.urlParameters; _i < _a.length; _i++) {\n          var urlParameter = _a[_i];\n          var urlParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, urlParameter, operationSpec.serializer);\n          urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, getPathStringFromParameter(urlParameter));\n          if (!urlParameter.skipEncoding) {\n            urlParameterValue = encodeURIComponent(urlParameterValue);\n          }\n          requestUrl.replaceAll(\"{\" + (urlParameter.mapper.serializedName || getPathStringFromParameter(urlParameter)) + \"}\", urlParameterValue);\n        }\n      }\n      if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n        for (var _b = 0, _c = operationSpec.queryParameters; _b < _c.length; _b++) {\n          var queryParameter = _c[_b];\n          var queryParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, queryParameter, operationSpec.serializer);\n          if (queryParameterValue != undefined) {\n            queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, getPathStringFromParameter(queryParameter));\n            if (queryParameter.collectionFormat != undefined) {\n              if (queryParameter.collectionFormat === QueryCollectionFormat.Multi) {\n                if (queryParameterValue.length === 0) {\n                  queryParameterValue = \"\";\n                } else {\n                  for (var index in queryParameterValue) {\n                    var item = queryParameterValue[index];\n                    queryParameterValue[index] = item == undefined ? \"\" : item.toString();\n                  }\n                }\n              } else if (queryParameter.collectionFormat === QueryCollectionFormat.Ssv || queryParameter.collectionFormat === QueryCollectionFormat.Tsv) {\n                queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n              }\n            }\n            if (!queryParameter.skipEncoding) {\n              if (Array.isArray(queryParameterValue)) {\n                for (var index in queryParameterValue) {\n                  if (queryParameterValue[index] !== undefined && queryParameterValue[index] !== null) {\n                    queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                  }\n                }\n              } else {\n                queryParameterValue = encodeURIComponent(queryParameterValue);\n              }\n            }\n            if (queryParameter.collectionFormat != undefined && queryParameter.collectionFormat !== QueryCollectionFormat.Multi && queryParameter.collectionFormat !== QueryCollectionFormat.Ssv && queryParameter.collectionFormat !== QueryCollectionFormat.Tsv) {\n              queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n            }\n            requestUrl.setQueryParameter(queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter), queryParameterValue);\n          }\n        }\n      }\n      httpRequest.url = requestUrl.toString();\n      var contentType = operationSpec.contentType || this.requestContentType;\n      if (contentType) {\n        httpRequest.headers.set(\"Content-Type\", contentType);\n      }\n      if (operationSpec.headerParameters) {\n        for (var _d = 0, _e = operationSpec.headerParameters; _d < _e.length; _d++) {\n          var headerParameter = _e[_d];\n          var headerValue = getOperationArgumentValueFromParameter(this, operationArguments, headerParameter, operationSpec.serializer);\n          if (headerValue != undefined) {\n            headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, getPathStringFromParameter(headerParameter));\n            var headerCollectionPrefix = headerParameter.mapper.headerCollectionPrefix;\n            if (headerCollectionPrefix) {\n              for (var _f = 0, _g = Object.keys(headerValue); _f < _g.length; _f++) {\n                var key = _g[_f];\n                httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n              }\n            } else {\n              httpRequest.headers.set(headerParameter.mapper.serializedName || getPathStringFromParameter(headerParameter), headerValue);\n            }\n          }\n        }\n      }\n      var options = operationArguments.options;\n      if (options) {\n        if (options.customHeaders) {\n          for (var customHeaderName in options.customHeaders) {\n            httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n          }\n        }\n        if (options.abortSignal) {\n          httpRequest.abortSignal = options.abortSignal;\n        }\n        if (options.timeout) {\n          httpRequest.timeout = options.timeout;\n        }\n        if (options.onUploadProgress) {\n          httpRequest.onUploadProgress = options.onUploadProgress;\n        }\n        if (options.onDownloadProgress) {\n          httpRequest.onDownloadProgress = options.onDownloadProgress;\n        }\n      }\n      httpRequest.withCredentials = this._withCredentials;\n      serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n      if (httpRequest.streamResponseBody == undefined) {\n        httpRequest.streamResponseBody = isStreamOperation(operationSpec);\n      }\n      result = this.sendRequest(httpRequest).then(function (res) {\n        return flattenResponse(res, operationSpec.responses[res.status]);\n      });\n    } catch (error) {\n      result = Promise.reject(error);\n    }\n    var cb = callback;\n    if (cb) {\n      result\n      // tslint:disable-next-line:no-null-keyword\n      .then(function (res) {\n        return cb(null, res._response.parsedBody, res._response.request, res._response);\n      }).catch(function (err) {\n        return cb(err);\n      });\n    }\n    return result;\n  };\n  return ServiceClient;\n}();\nexport { ServiceClient };\nexport function serializeRequestBody(serviceClient, httpRequest, operationArguments, operationSpec) {\n  if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n    httpRequest.body = getOperationArgumentValueFromParameter(serviceClient, operationArguments, operationSpec.requestBody, operationSpec.serializer);\n    var bodyMapper = operationSpec.requestBody.mapper;\n    var required = bodyMapper.required,\n      xmlName = bodyMapper.xmlName,\n      xmlElementName = bodyMapper.xmlElementName,\n      serializedName = bodyMapper.serializedName;\n    var typeName = bodyMapper.type.name;\n    try {\n      if (httpRequest.body != undefined || required) {\n        var requestBodyParameterPathString = getPathStringFromParameter(operationSpec.requestBody);\n        httpRequest.body = operationSpec.serializer.serialize(bodyMapper, httpRequest.body, requestBodyParameterPathString);\n        var isStream = typeName === MapperType.Stream;\n        if (operationSpec.isXML) {\n          if (typeName === MapperType.Sequence) {\n            httpRequest.body = stringifyXML(utils.prepareXMLRootList(httpRequest.body, xmlElementName || xmlName || serializedName), {\n              rootName: xmlName || serializedName\n            });\n          } else if (!isStream) {\n            httpRequest.body = stringifyXML(httpRequest.body, {\n              rootName: xmlName || serializedName\n            });\n          }\n        } else if (!isStream) {\n          httpRequest.body = JSON.stringify(httpRequest.body);\n        }\n      }\n    } catch (error) {\n      throw new Error(\"Error \\\"\" + error.message + \"\\\" occurred in serializing the payload - \" + JSON.stringify(serializedName, undefined, \"  \") + \".\");\n    }\n  } else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n    httpRequest.formData = {};\n    for (var _i = 0, _a = operationSpec.formDataParameters; _i < _a.length; _i++) {\n      var formDataParameter = _a[_i];\n      var formDataParameterValue = getOperationArgumentValueFromParameter(serviceClient, operationArguments, formDataParameter, operationSpec.serializer);\n      if (formDataParameterValue != undefined) {\n        var formDataParameterPropertyName = formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n        httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, getPathStringFromParameter(formDataParameter));\n      }\n    }\n  }\n}\nfunction isRequestPolicyFactory(instance) {\n  return typeof instance.create === \"function\";\n}\nfunction getValueOrFunctionResult(value, defaultValueCreator) {\n  var result;\n  if (typeof value === \"string\") {\n    result = value;\n  } else {\n    result = defaultValueCreator();\n    if (typeof value === \"function\") {\n      result = value(result);\n    }\n  }\n  return result;\n}\nfunction createDefaultRequestPolicyFactories(credentials, options) {\n  var factories = [];\n  if (options.generateClientRequestIdHeader) {\n    factories.push(generateClientRequestIdPolicy(options.clientRequestIdHeaderName));\n  }\n  if (credentials) {\n    if (isRequestPolicyFactory(credentials)) {\n      factories.push(credentials);\n    } else {\n      factories.push(signingPolicy(credentials));\n    }\n  }\n  var userAgentHeaderName = getValueOrFunctionResult(options.userAgentHeaderName, getDefaultUserAgentHeaderName);\n  var userAgentHeaderValue = getValueOrFunctionResult(options.userAgent, getDefaultUserAgentValue);\n  if (userAgentHeaderName && userAgentHeaderValue) {\n    factories.push(userAgentPolicy({\n      key: userAgentHeaderName,\n      value: userAgentHeaderValue\n    }));\n  }\n  var redirectOptions = __assign(__assign({}, DefaultRedirectOptions), options.redirectOptions);\n  if (redirectOptions.handleRedirects) {\n    factories.push(redirectPolicy(redirectOptions.maxRetries));\n  }\n  factories.push(rpRegistrationPolicy(options.rpRegistrationRetryTimeout));\n  if (!options.noRetryPolicy) {\n    factories.push(exponentialRetryPolicy());\n    factories.push(systemErrorRetryPolicy());\n    factories.push(throttlingRetryPolicy());\n  }\n  factories.push(deserializationPolicy(options.deserializationContentTypes));\n  var proxySettings = options.proxySettings || getDefaultProxySettings();\n  if (proxySettings) {\n    factories.push(proxyPolicy(proxySettings));\n  }\n  if (options.agentSettings) {\n    factories.push(agentPolicy(options.agentSettings));\n  }\n  return factories;\n}\n/**\n * Get the property parent for the property at the provided path when starting with the provided\n * parent object.\n */\nexport function getPropertyParent(parent, propertyPath) {\n  if (parent && propertyPath) {\n    var propertyPathLength = propertyPath.length;\n    for (var i = 0; i < propertyPathLength - 1; ++i) {\n      var propertyName = propertyPath[i];\n      if (!parent[propertyName]) {\n        parent[propertyName] = {};\n      }\n      parent = parent[propertyName];\n    }\n  }\n  return parent;\n}\nfunction getOperationArgumentValueFromParameter(serviceClient, operationArguments, parameter, serializer) {\n  return getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameter.parameterPath, parameter.mapper, serializer);\n}\nexport function getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameterPath, parameterMapper, serializer) {\n  var value;\n  if (typeof parameterPath === \"string\") {\n    parameterPath = [parameterPath];\n  }\n  if (Array.isArray(parameterPath)) {\n    if (parameterPath.length > 0) {\n      if (parameterMapper.isConstant) {\n        value = parameterMapper.defaultValue;\n      } else {\n        var propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n        if (!propertySearchResult.propertyFound) {\n          propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n        }\n        var useDefaultValue = false;\n        if (!propertySearchResult.propertyFound) {\n          useDefaultValue = parameterMapper.required || parameterPath[0] === \"options\" && parameterPath.length === 2;\n        }\n        value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n      }\n      // Serialize just for validation purposes.\n      var parameterPathString = getPathStringFromParameterPath(parameterPath, parameterMapper);\n      serializer.serialize(parameterMapper, value, parameterPathString);\n    }\n  } else {\n    if (parameterMapper.required) {\n      value = {};\n    }\n    for (var propertyName in parameterPath) {\n      var propertyMapper = parameterMapper.type.modelProperties[propertyName];\n      var propertyPath = parameterPath[propertyName];\n      var propertyValue = getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, propertyPath, propertyMapper, serializer);\n      // Serialize just for validation purposes.\n      var propertyPathString = getPathStringFromParameterPath(propertyPath, propertyMapper);\n      serializer.serialize(propertyMapper, propertyValue, propertyPathString);\n      if (propertyValue !== undefined) {\n        if (!value) {\n          value = {};\n        }\n        value[propertyName] = propertyValue;\n      }\n    }\n  }\n  return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n  var result = {\n    propertyFound: false\n  };\n  var i = 0;\n  for (; i < parameterPath.length; ++i) {\n    var parameterPathPart = parameterPath[i];\n    // Make sure to check inherited properties too, so don't use hasOwnProperty().\n    if (parent != undefined && parameterPathPart in parent) {\n      parent = parent[parameterPathPart];\n    } else {\n      break;\n    }\n  }\n  if (i === parameterPath.length) {\n    result.propertyValue = parent;\n    result.propertyFound = true;\n  }\n  return result;\n}\nexport function flattenResponse(_response, responseSpec) {\n  var parsedHeaders = _response.parsedHeaders;\n  var bodyMapper = responseSpec && responseSpec.bodyMapper;\n  var addOperationResponse = function (obj) {\n    return Object.defineProperty(obj, \"_response\", {\n      value: _response\n    });\n  };\n  if (bodyMapper) {\n    var typeName = bodyMapper.type.name;\n    if (typeName === \"Stream\") {\n      return addOperationResponse(__assign(__assign({}, parsedHeaders), {\n        blobBody: _response.blobBody,\n        readableStreamBody: _response.readableStreamBody\n      }));\n    }\n    var modelProperties_1 = typeName === \"Composite\" && bodyMapper.type.modelProperties || {};\n    var isPageableResponse = Object.keys(modelProperties_1).some(function (k) {\n      return modelProperties_1[k].serializedName === \"\";\n    });\n    if (typeName === \"Sequence\" || isPageableResponse) {\n      // We're expecting a sequece(array) make sure that the response body is in the\n      // correct format, if not make it an empty array []\n      var parsedBody = Array.isArray(_response.parsedBody) ? _response.parsedBody : [];\n      var arrayResponse = __spreadArrays(parsedBody);\n      for (var _i = 0, _a = Object.keys(modelProperties_1); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (modelProperties_1[key].serializedName) {\n          arrayResponse[key] = _response.parsedBody[key];\n        }\n      }\n      if (parsedHeaders) {\n        for (var _b = 0, _c = Object.keys(parsedHeaders); _b < _c.length; _b++) {\n          var key = _c[_b];\n          arrayResponse[key] = parsedHeaders[key];\n        }\n      }\n      addOperationResponse(arrayResponse);\n      return arrayResponse;\n    }\n    if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n      return addOperationResponse(__assign(__assign({}, parsedHeaders), _response.parsedBody));\n    }\n  }\n  if (bodyMapper || _response.request.method === \"HEAD\" || utils.isPrimitiveType(_response.parsedBody)) {\n    // primitive body types and HEAD booleans\n    return addOperationResponse(__assign(__assign({}, parsedHeaders), {\n      body: _response.parsedBody\n    }));\n  }\n  return addOperationResponse(__assign(__assign({}, parsedHeaders), _response.parsedBody));\n}","map":{"version":3,"names":["isTokenCredential","DefaultHttpClient","getPathStringFromParameter","getPathStringFromParameterPath","isStreamOperation","deserializationPolicy","exponentialRetryPolicy","generateClientRequestIdPolicy","userAgentPolicy","getDefaultUserAgentHeaderName","getDefaultUserAgentValue","DefaultRedirectOptions","redirectPolicy","RequestPolicyOptions","rpRegistrationPolicy","signingPolicy","systemErrorRetryPolicy","QueryCollectionFormat","MapperType","URLBuilder","utils","stringifyXML","isWebResourceLike","WebResource","agentPolicy","proxyPolicy","getDefaultProxySettings","throttlingRetryPolicy","AzureIdentityCredentialAdapter","azureResourceManagerEndpoints","ServiceClient","credentials","options","baseUri","serviceClientCredentials","scope","undefined","includes","signRequest","Error","_withCredentials","withCredentials","_httpClient","httpClient","_requestPolicyOptions","httpPipelineLogger","requestPolicyFactories","Array","isArray","createDefaultRequestPolicyFactories","newRequestPolicyFactories","_requestPolicyFactories","prototype","sendRequest","httpRequest","validateRequestProperties","prepare","error","Promise","reject","httpPipeline","length","i","create","sendOperationRequest","operationArguments","operationSpec","callback","result","baseUrl","method","httpMethod","requestUrl","parse","path","appendPath","urlParameters","_i","_a","urlParameter","urlParameterValue","getOperationArgumentValueFromParameter","serializer","serialize","mapper","skipEncoding","encodeURIComponent","replaceAll","serializedName","queryParameters","_b","_c","queryParameter","queryParameterValue","collectionFormat","Multi","index","item","toString","Ssv","Tsv","join","setQueryParameter","url","contentType","requestContentType","headers","set","headerParameters","_d","_e","headerParameter","headerValue","headerCollectionPrefix","_f","_g","Object","keys","key","customHeaders","customHeaderName","abortSignal","timeout","onUploadProgress","onDownloadProgress","serializeRequestBody","streamResponseBody","then","res","flattenResponse","responses","status","cb","_response","parsedBody","request","catch","err","serviceClient","requestBody","body","bodyMapper","required","xmlName","xmlElementName","typeName","type","name","requestBodyParameterPathString","isStream","Stream","isXML","Sequence","prepareXMLRootList","rootName","JSON","stringify","message","formDataParameters","formData","formDataParameter","formDataParameterValue","formDataParameterPropertyName","isRequestPolicyFactory","instance","getValueOrFunctionResult","value","defaultValueCreator","factories","generateClientRequestIdHeader","push","clientRequestIdHeaderName","userAgentHeaderName","userAgentHeaderValue","userAgent","redirectOptions","__assign","handleRedirects","maxRetries","rpRegistrationRetryTimeout","noRetryPolicy","deserializationContentTypes","proxySettings","agentSettings","getPropertyParent","parent","propertyPath","propertyPathLength","propertyName","parameter","getOperationArgumentValueFromParameterPath","parameterPath","parameterMapper","isConstant","defaultValue","propertySearchResult","getPropertyFromParameterPath","propertyFound","useDefaultValue","propertyValue","parameterPathString","propertyMapper","modelProperties","propertyPathString","parameterPathPart","responseSpec","parsedHeaders","addOperationResponse","obj","defineProperty","blobBody","readableStreamBody","modelProperties_1","isPageableResponse","some","k","arrayResponse","__spreadArrays","isPrimitiveType"],"sources":["../../lib/serviceClient.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}